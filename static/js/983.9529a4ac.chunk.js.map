{"version":3,"file":"static/js/983.9529a4ac.chunk.js","mappings":"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","sources":["api/api.js","components/Button/Button.styled.js","components/Button/Button.jsx","webpack://practices_react/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","components/User/User.styled.js","components/User/User.jsx","components/UserList/UsersList.jsx","pages/HomePage.jsx"],"sourcesContent":["import axios from 'axios'\naxios.defaults.baseURL = 'https://dummyjson.com/users'\n\nexport const getUsers = async (skip, limit) => {\n    const { data } = await axios(`?skip=${skip}&limit=${limit}`)\n    return data\n}\n\nexport const getUserDetails = async id => {\n    const { data } = await axios(`/${id}`)\n    return data\n}\n\nexport const createUser = async user => {\n    const { data } = await axios.post('/add', user)\n    return data\n}\n\nexport const searchUser = async (query, skip, limit) => {\n    const { data } = await axios.get(\n        `/search?q=${query}&skip=${skip}&limit=${limit}`\n    )\n    return data\n}\n\nexport const getPostsByUserId = async userId => {\n    const { data } = await axios(`${userId}/posts`)\n    return data\n}\n\nexport const getTodosByUserId = async userId => {\n    const { data } = await axios(`${userId}/todos`)\n    return data\n}\n","import styled from 'styled-components'\n\nexport const StyledButton = styled.button`\n    cursor: pointer;\n    min-width: 120px;\n    padding: 10px;\n    background-color: burlywood;\n    border-radius: 8px;\n    display: block;\n    margin-top: 10px;\n`\n","import { StyledButton } from './Button.styled'\n\nconst Button = ({ handleClick, text }) => {\n    return (\n        <StyledButton type=\"button\" onClick={handleClick}>\n            {text}\n        </StyledButton>\n    )\n}\n\nexport default Button\n","// extracted by mini-css-extract-plugin\nexport default {\"baseSection\":\"Section_baseSection__lX1iS\",\"superSection\":\"Section_superSection__qKemp Section_baseSection__lX1iS\"};","import css from './Section.module.css'\n\nconst Section = ({ title, children }) => {\n    return (\n        <section className={title ? css.superSection : css.baseSection}>\n            {title && <h1>{title}</h1>}\n            {children}\n        </section>\n    )\n}\n\nexport default Section\n","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const Title = styled.h2`\n    color: red;\n    text-shadow: 1px 1px 2px teal;\n    &:hover {\n        text-shadow: 1px 1px 0.5em teal;\n        cursor: pointer;\n    }\n`\n\nexport const Text = styled.p`\n    color: teal;\n    text-shadow: 0 0 2px white;\n`\n\nexport const NativeText = styled.span`\n    color: ${({ isEndedBiz }) => (isEndedBiz ? 'red' : 'yellow')};\n    ${Text}:hover & {\n        text-shadow: 1px 1px 0.5em teal;\n    }\n`\n\nexport const StyledButton = styled.button`\n    cursor: pointer;\n    min-width: 120px;\n    padding: 10px;\n    background-color: burlywood;\n    border-radius: 8px;\n    display: block;\n    margin-top: 10px;\n`\n\nexport const StyledLink = styled(Link)`\n    cursor: pointer;\n    width: 120px;\n    padding: 10px;\n    background-color: burlywood;\n    text-align: center;\n    border-radius: 8px;\n    display: block;\n    margin-top: 10px;\n    text-decoration: none;\n    color: black;\n    box-shadow: 0 0 12px black;\n    &:hover {\n        box-shadow: 0 0 18px black;\n    }\n`\n","import { Outlet, useLocation, useNavigate } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport Section from '../Section/Section'\nimport {\n    NativeText,\n    Text,\n    Title,\n    StyledLink,\n    StyledButton,\n} from './User.styled'\n\nconst User = ({ user: { id, firstName, image, email, phone }, isDetails }) => {\n    const navigate = useNavigate()\n    const location = useLocation()\n\n    const handleClick = route => {\n        navigate(route, { state: location.state })\n    }\n\n    const pathname = location.pathname === '/' ? '/users' : location.pathname\n\n    return (\n        <>\n            {!isDetails && (\n                <StyledButton onClick={() => handleClick(location.state)}>\n                    {'<'}\n                </StyledButton>\n            )}\n            <Section>\n                <li>\n                    <img src={image} alt={'Avatar'} width=\"200px\" />\n                    <Title>{firstName}</Title>\n                    <Text>\n                        Phone: <NativeText>{phone}</NativeText>\n                    </Text>\n                    <Text>\n                        Email:\n                        <NativeText>{email}</NativeText>\n                    </Text>\n                    {isDetails ? (\n                        <StyledLink to={`${pathname}/${id}`} state={location}>\n                            Show Details\n                        </StyledLink>\n                    ) : (\n                        <>\n                            <StyledButton onClick={() => handleClick('posts')}>\n                                Posts\n                            </StyledButton>\n                            <StyledButton onClick={() => handleClick('todos')}>\n                                Todos\n                            </StyledButton>\n                        </>\n                    )}\n                </li>\n                <Outlet />\n            </Section>\n        </>\n    )\n}\n\nUser.propTypes = {\n    user: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        firstName: PropTypes.string.isRequired,\n        image: PropTypes.string,\n        email: PropTypes.string.isRequired,\n        phone: PropTypes.string,\n    }),\n    isDetails: PropTypes.bool,\n}\n\nexport default User\n","import PropTypes from 'prop-types'\nimport User from '../User/User'\n\nconst UsersList = ({ users, isDetails }) => {\n    return (\n        <ul>\n            {users.map(user => (\n                <User key={user.id} user={user} isDetails={isDetails} />\n            ))}\n        </ul>\n    )\n}\n\nUsersList.propTypes = {\n    users: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            firstName: PropTypes.string.isRequired,\n            image: PropTypes.string,\n            email: PropTypes.string.isRequired,\n            phone: PropTypes.string,\n        })\n    ),\n    isDetails: PropTypes.bool,\n}\n\nexport default UsersList\n","import { useEffect, useState } from 'react'\nimport { toast } from 'react-hot-toast'\nimport { getUsers } from 'api/api'\nimport Button from 'components/Button/Button'\nimport UsersList from 'components/UserList/UsersList'\n\nconst SKIP = 10\nconst LIMIT = 10\n\nconst HomePage = () => {\n    const [users, setUsers] = useState(null)\n    const [page, setPage] = useState(1)\n    const [total, setTotal] = useState(0)\n\n    useEffect(() => {\n        handleUsers(page)\n    }, [page])\n\n    const handleUsers = async pageNumber => {\n        const skip = pageNumber * SKIP - LIMIT\n        const toastId = toast.loading('Loading...')\n        try {\n            const { users, total } = await getUsers(skip, LIMIT)\n            setTotal(total)\n            setUsers(prev => (prev ? [...prev, ...users] : users))\n            toast.success(`Total: ${total} users`, {\n                id: toastId,\n            })\n        } catch (error) {\n            toast.error(error.message)\n        }\n    }\n\n    const loadMore = () => {\n        setPage(prev => prev + 1)\n    }\n\n    return (\n        users && (\n            <>\n                <UsersList users={users} isDetails />\n                {users.length < total && (\n                    <Button handleClick={loadMore} text={'more...'} />\n                )}\n            </>\n        )\n    )\n}\n\nexport default HomePage\n"],"names":["axios","getUsers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","skip","limit","_yield$axios","data","wrap","_context","prev","next","concat","sent","abrupt","stop","_x","_x2","apply","arguments","getUserDetails","_ref2","_callee2","id","_yield$axios2","_context2","_x3","searchUser","_ref4","_callee4","query","_yield$axios$get","_context4","_x5","_x6","_x7","getPostsByUserId","_ref5","_callee5","userId","_yield$axios3","_context5","_x8","getTodosByUserId","_ref6","_callee6","_yield$axios4","_context6","_x9","StyledButton","styled","_templateObject","_taggedTemplateLiteral","handleClick","text","_jsx","type","onClick","children","title","_jsxs","className","css","Title","Text","_templateObject2","NativeText","_templateObject3","isEndedBiz","_templateObject4","StyledLink","Link","_templateObject5","_ref$user","user","firstName","image","email","phone","isDetails","navigate","useNavigate","location","useLocation","route","state","pathname","_Fragment","Section","src","alt","width","to","Outlet","users","map","User","_useState","useState","_useState2","_slicedToArray","setUsers","_useState3","_useState4","page","setPage","_useState5","_useState6","total","setTotal","useEffect","handleUsers","pageNumber","toastId","_yield$getUsers","_users","_total","toast","_toConsumableArray","t0","message","UsersList","length","Button"],"sourceRoot":""}