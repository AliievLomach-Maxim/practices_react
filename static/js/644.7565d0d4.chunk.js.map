{"version":3,"file":"static/js/644.7565d0d4.chunk.js","mappings":"sKAEaA,E,QAAeC,GAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kL,SCQzC,EARe,SAAHC,GAA+B,IAAzBC,EAAWD,EAAXC,YAAaC,EAAIF,EAAJE,KAC3B,OACIC,EAAAA,EAAAA,KAACP,EAAY,CAACQ,KAAK,SAASC,QAASJ,EAAYK,SAC5CJ,GAGb,C,sECNaK,E,QAAOV,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wd,+ECD/B,EAA8B,6BAA9B,EAA0E,yD,SCU1E,EATgB,SAAHC,GAA6B,IAAvBQ,EAAKR,EAALQ,MAAOF,EAAQN,EAARM,SACtB,OACIG,EAAAA,EAAAA,MAAA,WAASC,UAAWF,EAAQG,EAAmBA,EAAgBL,SAAA,CAC1DE,IAASL,EAAAA,EAAAA,KAAA,MAAAG,SAAKE,IACdF,IAGb,E,6BCNaM,EAAQf,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yJASjBc,EAAOhB,EAAAA,GAAAA,EAAQiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,6DAKfgB,EAAalB,EAAAA,GAAAA,KAAWmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,+FACxB,SAAAC,GAAa,OAAAA,EAAViB,WAA+B,MAAQ,QAAQ,GACzDJ,GAKOjB,EAAeC,EAAAA,GAAAA,OAAaqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,kLAU5BoB,GAAatB,EAAAA,EAAAA,IAAOuB,EAAAA,GAAPvB,CAAYwB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,kVCqCtC,EA5Da,SAAHC,GAAsE,IAADsB,EAAAtB,EAA/DuB,KAAQC,EAAGF,EAAHE,IAAKC,EAASH,EAATG,UAAWC,EAAKJ,EAALI,MAAOC,EAAKL,EAALK,MAAOC,EAAKN,EAALM,MAASC,EAAS7B,EAAT6B,UACrDC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXhC,EAAc,SAAAiC,GAChBJ,EAASI,EAAO,CAAEC,MAAOH,EAASG,OACtC,EAEMC,EAAiC,MAAtBJ,EAASI,SAAmB,SAAWJ,EAASI,SAEjE,OACI3B,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAA/B,SAAA,EACMuB,IACE1B,EAAAA,EAAAA,KAACP,EAAY,CAACS,QAAS,kBAAMJ,EAAY+B,EAASG,MAAM,EAAC7B,SACpD,OAGTG,EAAAA,EAAAA,MAAC6B,EAAO,CAAAhC,SAAA,EACJG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACIH,EAAAA,EAAAA,KAAA,OAAKoC,IAAKb,EAAOc,IAAK,SAAUC,MAAM,WACtCtC,EAAAA,EAAAA,KAACS,EAAK,CAAAN,SAAEmB,KACRhB,EAAAA,EAAAA,MAACI,EAAI,CAAAP,SAAA,CAAC,WACKH,EAAAA,EAAAA,KAACY,EAAU,CAAAT,SAAEsB,QAExBnB,EAAAA,EAAAA,MAACI,EAAI,CAAAP,SAAA,CAAC,UAEFH,EAAAA,EAAAA,KAACY,EAAU,CAAAT,SAAEqB,OAEhBE,GACG1B,EAAAA,EAAAA,KAACgB,EAAU,CAACuB,GAAE,GAAAC,OAAKP,EAAQ,KAAAO,OAAInB,GAAOW,MAAOH,EAAS1B,SAAC,kBAIvDG,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAA/B,SAAA,EACIH,EAAAA,EAAAA,KAACP,EAAY,CAACS,QAAS,kBAAMJ,EAAY,QAAQ,EAACK,SAAC,WAGnDH,EAAAA,EAAAA,KAACP,EAAY,CAACS,QAAS,kBAAMJ,EAAY,QAAQ,EAACK,SAAC,iBAM/DH,EAAAA,EAAAA,KAACyC,EAAAA,GAAM,SAIvB,C,8CChCA,IAvBkB,SAAH5C,GAA8B,IAAxB6C,EAAK7C,EAAL6C,MAAOhB,EAAS7B,EAAT6B,UACxB,OACI1B,EAAAA,EAAAA,KAAA,MAAAG,SACKuC,EAAMC,KAAI,SAAAvB,GAAI,OACXpB,EAAAA,EAAAA,KAAC4C,EAAAA,EAAI,CAAgBxB,KAAMA,EAAMM,UAAWA,GAAjCN,EAAKC,IAAyC,KAIzE,C,qLCoBA,EA5BmB,SAAHxB,GAA6D,IAAvDgD,EAAiBhD,EAAjBgD,kBAAmBC,EAAejD,EAAfiD,gBAAiBC,EAAWlD,EAAXkD,YAStD,OACIzC,EAAAA,EAAAA,MAACF,EAAAA,EAAI,CAAC4C,SANW,SAAAC,GACjBA,EAAEC,iBACFL,GACJ,EAGiC1C,SAAA,EACzBH,EAAAA,EAAAA,KAAA,SACIC,KAAK,SACLkD,YAAY,sBACZC,MAAOL,EACPM,SAdS,SAAHC,GAAA,IAAgBF,EAAKE,EAAfC,OAAUH,MAAK,OACnCN,EAAgB,CAAEU,OAAQJ,GAAQ,KAe9BpD,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,aAGpB,E,UCwDA,EArEkB,WACd,IAAAsD,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCf,EAAKiB,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAwBJ,EAAAA,EAAAA,UAAS,GAAEK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA5BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BR,EAAAA,EAAAA,UAAS,IAAGS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAjCV,EAAMW,EAAA,GAAEC,EAASD,EAAA,GACxBE,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAX,EAAAA,EAAAA,GAAAS,EAAA,GAAlDG,EAAYD,EAAA,GAAEzB,EAAeyB,EAAA,GAE9BxB,GAAc0B,EAAAA,EAAAA,UAChB,eAAAC,EAAA,OAAgC,QAAhCA,EAAMF,EAAaG,IAAI,iBAAS,IAAAD,EAAAA,EAAI,EAAE,GACtC,CAACF,KAQLI,EAAAA,EAAAA,YAAU,YACL7B,GAAeD,EAAgB,CAAC,EACrC,GAAG,CAACC,EAAaD,IAEjB,IAAM+B,EAAe,eAAAhF,GAAAiF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOlC,EAAamC,GAAU,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACP,OAArCP,EAAUQ,EAAAA,GAAAA,QAAc,cAAaH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAERE,EAAAA,EAAAA,IAC3B7C,EACAmC,EA3BF,IA6BD,OAAAE,EAAAI,EAAAK,KAJOnD,EAAK0C,EAAL1C,OAAO4C,EAAKF,EAALE,QAMXzB,GAAS,SAAA4B,GAAI,OAAKA,EAAI,GAAAjD,QAAAsD,EAAAA,EAAAA,GAAOL,IAAIK,EAAAA,EAAAA,GAAKpD,KAAKoD,EAAAA,EAAAA,GAAQpD,EAAM,IACzDiD,EAAAA,GAAAA,QAAc,UAADnD,OAAW8C,EAAK,UAAU,CACnCS,GAAIZ,KAGRQ,EAAAA,GAAAA,MAAY,YAAa,CACrBI,GAAIZ,IAEXK,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAEDG,EAAAA,GAAAA,MAAYH,EAAAQ,GAAMC,SAAQ,yBAAAT,EAAAU,OAAA,GAAAjB,EAAA,mBAEjC,gBArBoBkB,EAAAC,GAAA,OAAAvG,EAAAwG,MAAA,KAAAC,UAAA,MAuBrB1B,EAAAA,EAAAA,YAAU,WACG,IAATZ,GAAcH,EAAS,MACvBL,GAAUqB,EAAgBrB,EAAQQ,EACtC,GAAG,CAACR,EAAQQ,IAIZ,OACI1D,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAA/B,SAAA,EACIH,EAAAA,EAAAA,KAACuG,EAAU,CACP1D,kBA1Cc,WACtBoB,EAAQ,GACRG,EAAUrB,EACd,EAwCYA,YAAaA,EACbD,gBAAiBA,IAEpBJ,IACGpC,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAA/B,SAAA,EACIH,EAAAA,EAAAA,KAACwG,EAAAA,EAAS,CAAC9D,MAAOA,EAAOhB,WAAS,IACjCgB,EAAM+D,OA9Db,KA+DUzG,EAAAA,EAAAA,KAAC0G,EAAAA,EAAM,CAAC5G,YAbX,WAAH,OAASmE,GAAQ,SAAAwB,GAAI,OAAIA,EAAO,CAAC,GAAC,EAaG1F,KAAM,iBAM7D,C","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/Form/SearchForm.styled.js","webpack://practices_react/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","components/User/User.styled.js","components/User/User.jsx","components/UserList/UsersList.jsx","components/Form/SearchForm.jsx","pages/Users/UsersPage.jsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const StyledButton = styled.button`\n    cursor: pointer;\n    min-width: 120px;\n    padding: 10px;\n    background-color: burlywood;\n    border-radius: 8px;\n    display: block;\n    margin-top: 10px;\n`\n","import { StyledButton } from './Button.styled'\n\nconst Button = ({ handleClick, text }) => {\n    return (\n        <StyledButton type=\"button\" onClick={handleClick}>\n            {text}\n        </StyledButton>\n    )\n}\n\nexport default Button\n","import styled from 'styled-components'\n\nexport const Form = styled.form`\n    display: flex;\n    justify-content: center;\n    padding: 12px;\n    input {\n        padding: 12px;\n        width: 300px;\n        font-weight: bold;\n        font-size: 18px;\n        border-radius: 8px;\n        margin-right: 12px;\n    }\n    button {\n        cursor: pointer;\n        width: 120px;\n        padding: 10px;\n        background-color: burlywood;\n        border-radius: 8px;\n        font-weight: 400;\n        font-size: 18px;\n    }\n`\n","// extracted by mini-css-extract-plugin\nexport default {\"baseSection\":\"Section_baseSection__lX1iS\",\"superSection\":\"Section_superSection__qKemp Section_baseSection__lX1iS\"};","import css from './Section.module.css'\n\nconst Section = ({ title, children }) => {\n    return (\n        <section className={title ? css.superSection : css.baseSection}>\n            {title && <h1>{title}</h1>}\n            {children}\n        </section>\n    )\n}\n\nexport default Section\n","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const Title = styled.h2`\n    color: red;\n    text-shadow: 1px 1px 2px teal;\n    &:hover {\n        text-shadow: 1px 1px 0.5em teal;\n        cursor: pointer;\n    }\n`\n\nexport const Text = styled.p`\n    color: teal;\n    text-shadow: 0 0 2px white;\n`\n\nexport const NativeText = styled.span`\n    color: ${({ isEndedBiz }) => (isEndedBiz ? 'red' : 'yellow')};\n    ${Text}:hover & {\n        text-shadow: 1px 1px 0.5em teal;\n    }\n`\n\nexport const StyledButton = styled.button`\n    cursor: pointer;\n    min-width: 120px;\n    padding: 10px;\n    background-color: burlywood;\n    border-radius: 8px;\n    display: block;\n    margin-top: 10px;\n`\n\nexport const StyledLink = styled(Link)`\n    cursor: pointer;\n    width: 120px;\n    padding: 10px;\n    background-color: burlywood;\n    text-align: center;\n    border-radius: 8px;\n    display: block;\n    margin-top: 10px;\n    text-decoration: none;\n    color: black;\n    box-shadow: 0 0 12px black;\n    &:hover {\n        box-shadow: 0 0 18px black;\n    }\n`\n","import { Outlet, useLocation, useNavigate } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport Section from '../Section/Section'\nimport {\n    NativeText,\n    Text,\n    Title,\n    StyledLink,\n    StyledButton,\n} from './User.styled'\n\nconst User = ({ user: { _id, firstName, image, email, phone }, isDetails }) => {\n    const navigate = useNavigate()\n    const location = useLocation()\n\n    const handleClick = route => {\n        navigate(route, { state: location.state })\n    }\n\n    const pathname = location.pathname === '/' ? '/users' : location.pathname\n\n    return (\n        <>\n            {!isDetails && (\n                <StyledButton onClick={() => handleClick(location.state)}>\n                    {'<'}\n                </StyledButton>\n            )}\n            <Section>\n                <li>\n                    <img src={image} alt={'Avatar'} width=\"200px\" />\n                    <Title>{firstName}</Title>\n                    <Text>\n                        Phone: <NativeText>{phone}</NativeText>\n                    </Text>\n                    <Text>\n                        Email:\n                        <NativeText>{email}</NativeText>\n                    </Text>\n                    {isDetails ? (\n                        <StyledLink to={`${pathname}/${_id}`} state={location}>\n                            Show Details\n                        </StyledLink>\n                    ) : (\n                        <>\n                            <StyledButton onClick={() => handleClick('posts')}>\n                                Posts\n                            </StyledButton>\n                            <StyledButton onClick={() => handleClick('todos')}>\n                                Todos\n                            </StyledButton>\n                        </>\n                    )}\n                </li>\n                <Outlet />\n            </Section>\n        </>\n    )\n}\n\nUser.propTypes = {\n    user: PropTypes.shape({\n        _id: PropTypes.string.isRequired,\n        firstName: PropTypes.string.isRequired,\n        image: PropTypes.string,\n        email: PropTypes.string.isRequired,\n        phone: PropTypes.string,\n    }),\n    isDetails: PropTypes.bool,\n}\n\nexport default User\n","import PropTypes from 'prop-types'\nimport User from '../User/User'\n\nconst UsersList = ({ users, isDetails }) => {\n    return (\n        <ul>\n            {users.map(user => (\n                <User key={user._id} user={user} isDetails={isDetails} />\n            ))}\n        </ul>\n    )\n}\n\nUsersList.propTypes = {\n    users: PropTypes.arrayOf(\n        PropTypes.shape({\n            _id: PropTypes.string.isRequired,\n            firstName: PropTypes.string.isRequired,\n            image: PropTypes.string,\n            email: PropTypes.string.isRequired,\n            phone: PropTypes.string,\n        })\n    ),\n    isDetails: PropTypes.bool,\n}\n\nexport default UsersList\n","import PropTypes from 'prop-types'\nimport { Form } from './SearchForm.styled'\n\nconst SearchForm = ({ handleSearchQuery, setSearchParams, searchQuery }) => {\n    const handleChange = ({ target: { value } }) =>\n        setSearchParams({ search: value })\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        handleSearchQuery()\n    }\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <input\n                type=\"search\"\n                placeholder=\"Search user by name\"\n                value={searchQuery}\n                onChange={handleChange}\n            />\n            <button>Search</button>\n        </Form>\n    )\n}\n\nSearchForm.propTypes = {\n    handleSearchQuery: PropTypes.func.isRequired,\n    setSearchParams: PropTypes.func.isRequired,\n    searchQuery: PropTypes.string.isRequired,\n}\n\nexport default SearchForm\n","import { useEffect, useMemo, useState } from 'react'\nimport { toast } from 'react-hot-toast'\nimport { useSearchParams } from 'react-router-dom'\nimport { searchUser } from 'api/api'\nimport Button from 'components/Button/Button'\nimport SearchForm from 'components/Form/SearchForm'\nimport UsersList from 'components/UserList/UsersList'\n\nconst LIMIT = 10\n\nconst UsersPage = () => {\n    const [users, setUsers] = useState(null)\n    const [page, setPage] = useState(1)\n    const [search, setSearch] = useState('')\n    const [searchParams, setSearchParams] = useSearchParams()\n\n    const searchQuery = useMemo(\n        () => searchParams.get('search') ?? '',\n        [searchParams]\n    )\n\n    const handleSearchQuery = () => {\n        setPage(1)\n        setSearch(searchQuery)\n    }\n\n    useEffect(() => {\n        !searchQuery && setSearchParams({})\n    }, [searchQuery, setSearchParams])\n\n    const getSearchResult = async (searchQuery, pageNumber) => {\n        const toastId = toast.loading('Loading...')\n        try {\n            const { users, total } = await searchUser(\n                searchQuery,\n                pageNumber,\n                LIMIT\n            )\n            if (total) {\n                setUsers(prev => (prev ? [...prev, ...users] : [...users]))\n                toast.success(`Finned ${total} users`, {\n                    id: toastId,\n                })\n            } else {\n                toast.error('Not found', {\n                    id: toastId,\n                })\n            }\n        } catch (error) {\n            toast.error(error.message)\n        }\n    }\n\n    useEffect(() => {\n        page === 1 && setUsers(null)\n        search && getSearchResult(search, page)\n    }, [search, page])\n\n    const loadMore = () => setPage(prev => prev + 1)\n\n    return (\n        <>\n            <SearchForm\n                handleSearchQuery={handleSearchQuery}\n                searchQuery={searchQuery}\n                setSearchParams={setSearchParams}\n            />\n            {users && (\n                <>\n                    <UsersList users={users} isDetails />\n                    {users.length > LIMIT && (\n                        <Button handleClick={loadMore} text={'more...'} />\n                    )}\n                </>\n            )}\n        </>\n    )\n}\n\nexport default UsersPage\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","_ref","handleClick","text","_jsx","type","onClick","children","Form","title","_jsxs","className","css","Title","Text","_templateObject2","NativeText","_templateObject3","isEndedBiz","_templateObject4","StyledLink","Link","_templateObject5","_ref$user","user","_id","firstName","image","email","phone","isDetails","navigate","useNavigate","location","useLocation","route","state","pathname","_Fragment","Section","src","alt","width","to","concat","Outlet","users","map","User","handleSearchQuery","setSearchParams","searchQuery","onSubmit","e","preventDefault","placeholder","value","onChange","_ref2","target","search","_useState","useState","_useState2","_slicedToArray","setUsers","_useState3","_useState4","page","setPage","_useState5","_useState6","setSearch","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","useMemo","_searchParams$get","get","useEffect","getSearchResult","_asyncToGenerator","_regeneratorRuntime","mark","_callee","pageNumber","toastId","_yield$searchUser","_users","total","wrap","_context","prev","next","toast","searchUser","sent","_toConsumableArray","id","t0","message","stop","_x","_x2","apply","arguments","SearchForm","UsersList","length","Button"],"sourceRoot":""}