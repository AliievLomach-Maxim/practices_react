{"version":3,"file":"static/js/890.920f292c.chunk.js","mappings":"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","sources":["components/User/User.jsx","components/UserList/UsersList.jsx","store/users/selectors.js","components/Form/FilterForm.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import {\n    CardActions,\n    CardMedia,\n    Button,\n    Typography,\n    Card,\n    CardContent,\n} from '@mui/material'\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nconst User = ({ user: { _id, firstName, image, email, phone }, isDetails }) => {\n    const navigate = useNavigate()\n    const location = useLocation()\n\n    const handleClick = route => {\n        navigate(route, { state: location.state })\n    }\n\n    const pathname = location.pathname === '/' ? '/users' : location.pathname\n\n    return (\n        <>\n            {!isDetails && (\n                <Button\n                    variant=\"text\"\n                    sx={{ borderRadius: 30, p: 1 }}\n                    onClick={() => handleClick(location.state)}\n                >\n                    <ArrowBackIosIcon fontSize=\"large\" />\n                </Button>\n            )}\n            <Card sx={{ maxWidth: isDetails ? 400 : 600, m: '0 auto' }}>\n                <CardMedia\n                    sx={{ height: 440 }}\n                    image={image}\n                    title={firstName}\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\n                        {firstName}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                        Phone: {phone}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                        Email: {email}\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    {isDetails ? (\n                        <Button\n                            size=\"medium\"\n                            onClick={() =>\n                                navigate(`${pathname}/${_id}`, {\n                                    state: location,\n                                })\n                            }\n                        >\n                            Show Details\n                        </Button>\n                    ) : (\n                        <Button\n                            size=\"medium\"\n                            onClick={() => handleClick('posts')}\n                        >\n                            Posts\n                        </Button>\n                    )}\n                </CardActions>\n                <Outlet />\n            </Card>\n        </>\n    )\n}\n\nUser.propTypes = {\n    user: PropTypes.shape({\n        _id: PropTypes.string.isRequired,\n        firstName: PropTypes.string.isRequired,\n        image: PropTypes.string,\n        email: PropTypes.string.isRequired,\n        phone: PropTypes.string,\n    }),\n    isDetails: PropTypes.bool,\n}\n\nexport default User\n","import PropTypes from 'prop-types'\nimport User from '../User/User'\nimport { Grid } from '@mui/material'\nimport { authSelector } from 'store/auth/selectors'\nimport { useSelector } from 'react-redux'\n\nconst UsersList = ({ users, isDetails }) => {\n    const { token } = useSelector(authSelector)\n\n    return (\n        <Grid container spacing={4} justifyContent=\"center\">\n            {users.map(user => (\n                <Grid item xs={token ? 6 : 3} key={user._id}>\n                    <User user={user} isDetails={isDetails} />\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n\nUsersList.propTypes = {\n    users: PropTypes.arrayOf(\n        PropTypes.shape({\n            _id: PropTypes.string.isRequired,\n            firstName: PropTypes.string.isRequired,\n            image: PropTypes.string,\n            email: PropTypes.string.isRequired,\n            phone: PropTypes.string,\n        })\n    ),\n    isDetails: PropTypes.bool,\n}\n\nexport default UsersList\n","import { createSelector } from '@reduxjs/toolkit'\n\nconst usersItemsSelector = state => state.users.users\nexport const filterSelector = state => state.users.filter\n\nexport const usersSelector = createSelector(\n    [usersItemsSelector, filterSelector],\n    (users, filter) => {\n        if (!users.items) {\n            return users\n        }\n\n        const lowercaseFilter = filter.toLowerCase()\n        const filteredItems = users.items?.filter(\n            user =>\n                user.firstName.toLowerCase().includes(lowercaseFilter) ||\n                user.phone.replaceAll(' ', '').includes(filter)\n        )\n        return {\n            ...users,\n            items: filteredItems || null,\n        }\n    }\n)\n","import PropTypes from 'prop-types'\nimport {\n    FormControl,\n    IconButton,\n    InputAdornment,\n    TextField,\n} from '@mui/material'\nimport SearchIcon from '@mui/icons-material/Search'\n\nconst FilterForm = ({ setFilterParams, filterQuery }) => {\n    const handleChange = ({ target: { value } }) =>\n        setFilterParams({ filter: value })\n\n    return (\n        <FormControl sx={{ m: '0 auto', width: 400 }} variant=\"outlined\">\n            <TextField\n                id=\"outlined-adornment-weight\"\n                label=\"Search\"\n                InputProps={{\n                    endAdornment: (\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                                type=\"button\"\n                                sx={{ p: '10px' }}\n                                aria-label=\"search\"\n                            >\n                                <SearchIcon />\n                            </IconButton>\n                        </InputAdornment>\n                    ),\n                }}\n                value={filterQuery}\n                onChange={handleChange}\n            />\n        </FormControl>\n    )\n}\n\nFilterForm.propTypes = {\n    setFilterParams: PropTypes.func.isRequired,\n    filterQuery: PropTypes.string.isRequired,\n}\n\nexport default FilterForm\n","import { useEffect, useMemo, useState } from 'react'\nimport { toast } from 'react-hot-toast'\nimport UsersList from 'components/UserList/UsersList'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAllUsersThunk } from 'store/users/thunks'\nimport { filterSelector, usersSelector } from 'store/users/selectors'\nimport FilterForm from 'components/Form/FilterForm'\nimport { setFilter } from 'store/users/userSlice'\nimport { useSearchParams } from 'react-router-dom'\nimport { Button, Stack, Typography } from '@mui/material'\n\nconst LIMIT = 10\n\nconst HomePage = () => {\n    const [currentPage, setPage] = useState(1)\n    const { items: users, total, page } = useSelector(usersSelector)\n    const filter = useSelector(filterSelector)\n    const [query, setFilterParams] = useSearchParams()\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if (!users || page !== currentPage)\n            dispatch(getAllUsersThunk({ page: currentPage, limit: LIMIT }))\n                .unwrap()\n                .then(({ total }) => toast.success(`Total: ${total} users`))\n    }, [dispatch, currentPage, total, users, page])\n\n    const filterQuery = useMemo(() => query.get('filter'), [query])\n\n    useEffect(() => {\n        filterQuery ? dispatch(setFilter(filterQuery)) : dispatch(setFilter(''))\n    }, [filterQuery, dispatch])\n\n    useEffect(() => {\n        !filterQuery && setFilterParams({})\n    }, [filterQuery, setFilterParams])\n\n    const loadMore = () => {\n        setPage(prev => prev + 1)\n    }\n\n    return (\n        users && (\n            <Stack>\n                <Stack mb={3}>\n                    <FilterForm\n                        filterQuery={filter}\n                        setFilterParams={setFilterParams}\n                    />\n                </Stack>\n                <UsersList users={users} isDetails />\n                {users.length < total && Boolean(users.length) && (\n                    <Button\n                        variant=\"outlined\"\n                        fullWidth\n                        sx={{ p: 2, mt: 4 }}\n                        onClick={loadMore}\n                    >\n                        <Typography variant=\"h5\">More...</Typography>\n                    </Button>\n                )}\n            </Stack>\n        )\n    )\n}\n\nexport default HomePage\n"],"names":["_ref","_ref$user","user","_id","firstName","image","email","phone","isDetails","navigate","useNavigate","location","useLocation","handleClick","route","state","pathname","_jsxs","_Fragment","children","_jsx","Button","variant","sx","borderRadius","p","onClick","ArrowBackIosIcon","fontSize","Card","maxWidth","m","CardMedia","height","title","CardContent","Typography","gutterBottom","component","color","CardActions","size","concat","Outlet","users","token","useSelector","authSelector","Grid","container","spacing","justifyContent","map","item","xs","User","filterSelector","filter","usersSelector","createSelector","_users$items","items","lowercaseFilter","toLowerCase","filteredItems","includes","replaceAll","_objectSpread","setFilterParams","filterQuery","FormControl","width","TextField","id","label","InputProps","endAdornment","InputAdornment","position","IconButton","type","SearchIcon","value","onChange","_ref2","target","_useState","useState","_useState2","_slicedToArray","currentPage","setPage","_useSelector","total","page","_useSearchParams","useSearchParams","_useSearchParams2","query","dispatch","useDispatch","useEffect","getAllUsersThunk","limit","unwrap","then","toast","useMemo","get","setFilter","Stack","mb","FilterForm","UsersList","length","Boolean","fullWidth","mt","prev"],"sourceRoot":""}